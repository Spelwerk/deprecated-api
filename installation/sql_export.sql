-- MySQL Script generated by MySQL Workbench
-- Thu May  4 16:30:27 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema spelwerk
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `spelwerk` ;

-- -----------------------------------------------------
-- Schema spelwerk
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spelwerk` DEFAULT CHARACTER SET utf8 ;
USE `spelwerk` ;

-- -----------------------------------------------------
-- Table `spelwerk`.`world`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `calculated` TINYINT(1) NOT NULL DEFAULT 0,
  `popularity` INT NOT NULL DEFAULT 0,
  `thumbsup` INT NOT NULL DEFAULT 0,
  `thumbsdown` INT NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `bionic` TINYINT(1) NOT NULL DEFAULT 0,
  `augmentation` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Augmentation Exists',
  `software` TINYINT(1) NOT NULL DEFAULT 0,
  `supernatural` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Affliction Exists',
  `supernatural_name` VARCHAR(64) NOT NULL DEFAULT 'Empath',
  `split_supernatural` INT NOT NULL DEFAULT 4,
  `split_skill` INT NOT NULL DEFAULT 1,
  `split_expertise` INT NOT NULL DEFAULT 4,
  `split_milestone` INT NOT NULL DEFAULT 8,
  `split_relationship` INT NOT NULL DEFAULT 8,
  `max_gift` INT NOT NULL DEFAULT 1,
  `max_imperfection` INT NOT NULL DEFAULT 1,
  `max_supernatural` INT NOT NULL DEFAULT 12,
  `max_skill` INT NOT NULL DEFAULT 32,
  `max_expertise` INT NOT NULL DEFAULT 12,
  `max_milestone` INT NOT NULL DEFAULT 6,
  `max_relationship` INT NOT NULL DEFAULT 4,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`story`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`story` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`story` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `secret` VARCHAR(32) NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `plot` TEXT NULL,
  `world_id` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `hash_UNIQUE` (`secret` ASC),
  INDEX `fk_story_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_story_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `secret` VARCHAR(32) NOT NULL,
  `playable` TINYINT(1) NOT NULL DEFAULT 0,
  `calculated` TINYINT(1) NOT NULL DEFAULT 0,
  `popularity` INT NOT NULL DEFAULT 0,
  `thumbsup` INT NOT NULL DEFAULT 0,
  `thumbsdown` INT NOT NULL DEFAULT 0,
  `nickname` VARCHAR(128) NOT NULL,
  `occupation` VARCHAR(128) NOT NULL,
  `world_id` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `hash_UNIQUE` (`secret` ASC),
  INDEX `fk_person_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_person_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`species`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`species` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`species` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `playable` TINYINT(1) NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `max_age` INT NULL,
  `multiply_skill` INT NULL,
  `multiply_expertise` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`icon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`icon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`icon` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NULL,
  `path` VARCHAR(512) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL COMMENT '	',
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`attributetype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`attributetype` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`attributetype` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `maximum` INT NOT NULL COMMENT 'Maximum Level of Attribute Type',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`attribute` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `attributetype_id` INT NOT NULL COMMENT 'Is Attribute Type',
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_attribute_attributetype1_idx` (`attributetype_id` ASC),
  CONSTRAINT `fk_attribute_attributetype1`
    FOREIGN KEY (`attributetype_id`)
    REFERENCES `spelwerk`.`attributetype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`skill` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `manifestation` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `species_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_skill_species1_idx` (`species_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_skill_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`manifestation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`manifestation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`manifestation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `power_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_manifestation_attribute1_idx` (`power_id` ASC),
  INDEX `fk_manifestation_skill1_idx` (`skill_id` ASC),
  CONSTRAINT `fk_manifestation_attribute1`
    FOREIGN KEY (`power_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_manifestation_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`background`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`background` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`background` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `species_id` INT NULL,
  `manifestation_id` INT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_caste_icon1_idx` (`icon_id` ASC),
  INDEX `fk_background_species2_idx` (`species_id` ASC),
  INDEX `fk_background_manifestation1_idx` (`manifestation_id` ASC),
  CONSTRAINT `fk_caste_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_background_species2`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_background_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`nature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`nature` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`nature` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `attribute_id` INT NULL COMMENT 'Gives Attribute',
  `attribute_value` INT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_nature_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_nature_icon1_idx` (`icon_id` ASC),
  CONSTRAINT `fk_nature_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nature_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`identity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`identity` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`identity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `attribute_id` INT NULL COMMENT 'Gives Attribute',
  `attribute_value` INT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_identity_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_identity_icon1_idx` (`icon_id` ASC),
  CONSTRAINT `fk_identity_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_identity_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`focus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`focus` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`focus` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `attribute_id` INT NULL COMMENT 'Gives Attribute',
  `attribute_value` INT NULL,
  `manifestation_id` INT NOT NULL COMMENT 'Requires Manifestation',
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_focus_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_focus_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_focus_icon1_idx` (`icon_id` ASC),
  CONSTRAINT `fk_focus_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_focus_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_focus_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`loyalty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`loyalty` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`loyalty` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` TEXT NULL,
  `value` INT NOT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_loyalty_icon1_idx` (`icon_id` ASC),
  CONSTRAINT `fk_loyalty_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`milestone` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`milestone` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `background_id` INT NULL,
  `species_id` INT NULL,
  `manifestation_id` INT NULL,
  `attribute_id` INT NULL COMMENT 'Gives Attribute',
  `attribute_value` INT NULL COMMENT 'Gives Attribute Value',
  `skill_id` INT NULL,
  `skill_value` INT NULL,
  `loyalty_id` INT NULL COMMENT 'Gives Relationship (and loyalty bonus)',
  `loyalty_occupation` VARCHAR(128) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_milestone_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_milestone_loyalty1_idx` (`loyalty_id` ASC),
  INDEX `fk_milestone_species1_idx` (`species_id` ASC),
  INDEX `fk_milestone_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_milestone_background1_idx` (`background_id` ASC),
  INDEX `fk_milestone_skill1_idx` (`skill_id` ASC),
  CONSTRAINT `fk_milestone_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_milestone_loyalty1`
    FOREIGN KEY (`loyalty_id`)
    REFERENCES `spelwerk`.`loyalty` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_milestone_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_milestone_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_milestone_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_milestone_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`species_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`species_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`species_has_attribute` (
  `species_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`species_id`, `attribute_id`),
  INDEX `fk_species_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_species_has_attribute_species1_idx` (`species_id` ASC),
  CONSTRAINT `fk_species_has_attribute_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_species_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`doctrine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`doctrine` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`doctrine` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `manifestation_id` INT NOT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_doctrine_manifestation1_idx` (`manifestation_id` ASC),
  CONSTRAINT `fk_doctrine_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`expertise` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Should not be displayed for purchase. Only available from other means.',
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `skill_id` INT NOT NULL,
  `species_id` INT NULL COMMENT 'Requires Species',
  `manifestation_id` INT NULL,
  `doctrine_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_expertise_species1_idx` (`species_id` ASC),
  INDEX `fk_expertise_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_expertise_skill1_idx` (`skill_id` ASC),
  INDEX `fk_expertise_doctrine1_idx` (`doctrine_id` ASC),
  CONSTRAINT `fk_expertise_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_expertise_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_expertise_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_expertise_doctrine1`
    FOREIGN KEY (`doctrine_id`)
    REFERENCES `spelwerk`.`doctrine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`wound`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`wound` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`wound` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(256) NOT NULL,
  `popularity` INT NOT NULL DEFAULT 0,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`weapongroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`weapongroup` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`weapongroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `special` TINYINT(1) NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `skill_id` INT NOT NULL,
  `expertise_id` INT NOT NULL COMMENT 'Gets roll dice bonus from expertise',
  `damage_id` INT NOT NULL COMMENT 'Damages Defensive Attribute',
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_weapongroup_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_weapongroup_attribute2_idx` (`damage_id` ASC),
  INDEX `fk_weapongroup_icon1_idx` (`icon_id` ASC),
  INDEX `fk_weapongroup_skill1_idx` (`skill_id` ASC),
  CONSTRAINT `fk_weapongroup_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapongroup_attribute2`
    FOREIGN KEY (`damage_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapongroup_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapongroup_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`weapontype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`weapontype` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`weapontype` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `damage_d12` INT NOT NULL,
  `damage_bonus` INT NOT NULL,
  `critical_d12` INT NOT NULL,
  `hand` INT NOT NULL,
  `initiative` INT NOT NULL,
  `hit` INT NOT NULL,
  `distance` INT NOT NULL,
  `weapongroup_id` INT NOT NULL COMMENT 'Is Weapon Group',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_weapontype_weapongroup1_idx` (`weapongroup_id` ASC),
  CONSTRAINT `fk_weapontype_weapongroup1`
    FOREIGN KEY (`weapongroup_id`)
    REFERENCES `spelwerk`.`weapongroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`weapon` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Will not be displayed for normal purchase',
  `species` TINYINT(1) NOT NULL DEFAULT 0,
  `augmentation` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `legal` TINYINT(1) NOT NULL,
  `weapontype_id` INT NOT NULL COMMENT 'Is Weapon Type',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_weapon_weapontype1_idx` (`weapontype_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_weapon_weapontype1`
    FOREIGN KEY (`weapontype_id`)
    REFERENCES `spelwerk`.`weapontype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`weaponquality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`weaponquality` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`weaponquality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `price` INT NOT NULL,
  `damage_d12` INT NOT NULL,
  `damage_bonus` INT NOT NULL,
  `critical_d12` INT NOT NULL,
  `initiative` INT NOT NULL,
  `hit` INT NOT NULL,
  `distance` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`weaponmod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`weaponmod` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`weaponmod` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `short` CHAR(1) NOT NULL COMMENT 'Short Name of 1 char so that weapon can easily display which mods are active.',
  `price` INT NOT NULL,
  `damage_d12` INT NOT NULL,
  `damage_bonus` INT NOT NULL,
  `critical_d12` INT NOT NULL,
  `initiative` INT NOT NULL,
  `hit` INT NOT NULL,
  `distance` INT NOT NULL,
  `weapontype_id` INT NOT NULL COMMENT 'Modifies Weapon Type',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_weaponmod_weapontype1_idx` (`weapontype_id` ASC),
  CONSTRAINT `fk_weaponmod_weapontype1`
    FOREIGN KEY (`weapontype_id`)
    REFERENCES `spelwerk`.`weapontype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`bodypart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`bodypart` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`bodypart` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`bionic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`bionic` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`bionic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `energy` INT NOT NULL,
  `legal` TINYINT(1) NOT NULL,
  `bodypart_id` INT NOT NULL,
  `attribute_id` INT NULL,
  `attribute_value` INT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_bionic_bodypart1_idx` (`bodypart_id` ASC),
  INDEX `fk_bionic_icon1_idx` (`icon_id` ASC),
  INDEX `fk_bionic_attribute1_idx` (`attribute_id` ASC),
  CONSTRAINT `fk_bionic_bodypart1`
    FOREIGN KEY (`bodypart_id`)
    REFERENCES `spelwerk`.`bodypart` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bionic_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bionic_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`augmentation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`augmentation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`augmentation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `energy` INT NOT NULL,
  `legal` TINYINT(1) NOT NULL,
  `weapon_id` INT NULL COMMENT 'Gives Weapon (When Augmentation is a weapon)',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_augmentation_weapon1_idx` (`weapon_id` ASC),
  CONSTRAINT `fk_augmentation_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`bionicquality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`bionicquality` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`bionicquality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `price` INT NOT NULL COMMENT 'Price Modifier',
  `energy` INT NOT NULL COMMENT 'Energy Modifier',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`augmentationquality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`augmentationquality` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`augmentationquality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `price` INT NOT NULL COMMENT 'Price Modifier',
  `energy` INT NOT NULL COMMENT 'Energy Modifier',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`assetgroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`assetgroup` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`assetgroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`assettype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`assettype` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`assettype` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `assetgroup_id` INT NOT NULL COMMENT 'Is Asset Group',
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_assettype_assetgroup1_idx` (`assetgroup_id` ASC),
  CONSTRAINT `fk_assettype_assetgroup1`
    FOREIGN KEY (`assetgroup_id`)
    REFERENCES `spelwerk`.`assetgroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`asset` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`asset` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `legal` TINYINT(1) NOT NULL,
  `assettype_id` INT NOT NULL COMMENT 'Is Asset Type',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_asset_assettype1_idx` (`assettype_id` ASC),
  CONSTRAINT `fk_asset_assettype1`
    FOREIGN KEY (`assettype_id`)
    REFERENCES `spelwerk`.`assettype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`protection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`protection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`protection` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `bodypart_id` INT NOT NULL,
  `icon_id` INT NULL,
  `icon` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_protection_bodypart1_idx` (`bodypart_id` ASC),
  INDEX `fk_protection_icon1_idx` (`icon_id` ASC),
  CONSTRAINT `fk_protection_bodypart1`
    FOREIGN KEY (`bodypart_id`)
    REFERENCES `spelwerk`.`bodypart` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_protection_icon1`
    FOREIGN KEY (`icon_id`)
    REFERENCES `spelwerk`.`icon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`protectionquality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`protectionquality` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`protectionquality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `price` INT NOT NULL,
  `bonus` INT NOT NULL COMMENT 'Modifies Defensive Attribute Value',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_attribute` (
  `person_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`person_id`, `attribute_id`),
  INDEX `fk_person_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_person_has_attribute_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_attribute_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_milestone` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_milestone` (
  `person_id` INT NOT NULL,
  `milestone_id` INT NOT NULL,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `milestone_id`),
  INDEX `fk_person_has_milestone_milestone1_idx` (`milestone_id` ASC),
  INDEX `fk_person_has_milestone_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_milestone_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_milestone_milestone1`
    FOREIGN KEY (`milestone_id`)
    REFERENCES `spelwerk`.`milestone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_expertise` (
  `person_id` INT NOT NULL,
  `expertise_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`person_id`, `expertise_id`),
  INDEX `fk_person_has_expertise_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_person_has_expertise_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_expertise_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_expertise_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_wound`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_wound` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_wound` (
  `person_id` INT NOT NULL,
  `wound_id` INT NOT NULL,
  `heal` TINYINT(1) NOT NULL DEFAULT 0,
  `timestwo` TINYINT(1) NOT NULL,
  PRIMARY KEY (`person_id`, `wound_id`),
  INDEX `fk_person_has_wound_wound1_idx` (`wound_id` ASC),
  INDEX `fk_person_has_wound_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_wound_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_wound_wound1`
    FOREIGN KEY (`wound_id`)
    REFERENCES `spelwerk`.`wound` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_weapon` (
  `person_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  `weaponquality_id` INT NOT NULL DEFAULT 3,
  `custom` TEXT NULL,
  `equipped` TINYINT(1) NOT NULL DEFAULT 1,
  `species` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`person_id`, `weapon_id`),
  INDEX `fk_person_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_person_has_weapon_person1_idx` (`person_id` ASC),
  INDEX `fk_person_has_weapon_weaponquality1_idx` (`weaponquality_id` ASC),
  CONSTRAINT `fk_person_has_weapon_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_weapon_weaponquality1`
    FOREIGN KEY (`weaponquality_id`)
    REFERENCES `spelwerk`.`weaponquality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_weaponmod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_weaponmod` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_weaponmod` (
  `person_id` INT NOT NULL,
  `weaponmod_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  PRIMARY KEY (`person_id`, `weaponmod_id`),
  INDEX `fk_person_has_weaponmod_weaponmod1_idx` (`weaponmod_id` ASC),
  INDEX `fk_person_has_weaponmod_person1_idx` (`person_id` ASC),
  INDEX `fk_person_has_weaponmod_weapon1_idx` (`weapon_id` ASC),
  CONSTRAINT `fk_person_has_weaponmod_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_weaponmod_weaponmod1`
    FOREIGN KEY (`weaponmod_id`)
    REFERENCES `spelwerk`.`weaponmod` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_weaponmod_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_bionic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_bionic` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_bionic` (
  `person_id` INT NOT NULL,
  `bionic_id` INT NOT NULL,
  `bionicquality_id` INT NOT NULL DEFAULT 3,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `bionic_id`),
  INDEX `fk_person_has_bionic_bionic1_idx` (`bionic_id` ASC),
  INDEX `fk_person_has_bionic_person1_idx` (`person_id` ASC),
  INDEX `fk_person_has_bionic_bionicquality1_idx` (`bionicquality_id` ASC),
  CONSTRAINT `fk_person_has_bionic_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_bionic_bionic1`
    FOREIGN KEY (`bionic_id`)
    REFERENCES `spelwerk`.`bionic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_bionic_bionicquality1`
    FOREIGN KEY (`bionicquality_id`)
    REFERENCES `spelwerk`.`bionicquality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_augmentation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_augmentation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_augmentation` (
  `person_id` INT NOT NULL,
  `bionic_id` INT NOT NULL,
  `augmentation_id` INT NOT NULL,
  `augmentationquality_id` INT NOT NULL DEFAULT 3,
  PRIMARY KEY (`person_id`, `augmentation_id`, `bionic_id`),
  INDEX `fk_person_has_augmentation_augmentation1_idx` (`augmentation_id` ASC),
  INDEX `fk_person_has_augmentation_person1_idx` (`person_id` ASC),
  INDEX `fk_person_has_augmentation_augmentationquality1_idx` (`augmentationquality_id` ASC),
  INDEX `fk_person_has_augmentation_bionic1_idx` (`bionic_id` ASC),
  CONSTRAINT `fk_person_has_augmentation_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_augmentation_augmentation1`
    FOREIGN KEY (`augmentation_id`)
    REFERENCES `spelwerk`.`augmentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_augmentation_augmentationquality1`
    FOREIGN KEY (`augmentationquality_id`)
    REFERENCES `spelwerk`.`augmentationquality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_augmentation_bionic1`
    FOREIGN KEY (`bionic_id`)
    REFERENCES `spelwerk`.`bionic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_protection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_protection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_protection` (
  `person_id` INT NOT NULL,
  `protection_id` INT NOT NULL,
  `protectionquality_id` INT NOT NULL DEFAULT 3,
  `custom` TEXT NULL,
  `equipped` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`person_id`, `protection_id`),
  INDEX `fk_person_has_protection_protection1_idx` (`protection_id` ASC),
  INDEX `fk_person_has_protection_person1_idx` (`person_id` ASC),
  INDEX `fk_person_has_protection_protectionquality1_idx` (`protectionquality_id` ASC),
  CONSTRAINT `fk_person_has_protection_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_protection_protection1`
    FOREIGN KEY (`protection_id`)
    REFERENCES `spelwerk`.`protection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_protection_protectionquality1`
    FOREIGN KEY (`protectionquality_id`)
    REFERENCES `spelwerk`.`protectionquality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_asset` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_asset` (
  `person_id` INT NOT NULL,
  `asset_id` INT NOT NULL,
  `value` INT NOT NULL,
  `custom` TEXT NULL,
  `equipped` TINYINT(1) NOT NULL,
  PRIMARY KEY (`person_id`, `asset_id`),
  INDEX `fk_person_has_asset_asset1_idx` (`asset_id` ASC),
  INDEX `fk_person_has_asset_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_asset_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_asset_asset1`
    FOREIGN KEY (`asset_id`)
    REFERENCES `spelwerk`.`asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`software`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`software` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`software` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `price` INT NOT NULL,
  `hacking` INT NOT NULL,
  `hacking_bonus` INT NOT NULL,
  `legal` TINYINT(1) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_software`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_software` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_software` (
  `person_id` INT NOT NULL,
  `software_id` INT NOT NULL,
  PRIMARY KEY (`person_id`, `software_id`),
  INDEX `fk_person_has_software_software1_idx` (`software_id` ASC),
  INDEX `fk_person_has_software_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_software_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_software_software1`
    FOREIGN KEY (`software_id`)
    REFERENCES `spelwerk`.`software` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_person` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_person` (
  `person_id_1` INT NOT NULL,
  `person_id_2` INT NOT NULL,
  `influence` INT NOT NULL,
  `loyalty_id` INT NOT NULL,
  `milestone_id` INT NULL,
  `hash` VARCHAR(32) NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`person_id_1`, `person_id_2`),
  INDEX `fk_person_has_person_person2_idx` (`person_id_2` ASC),
  INDEX `fk_person_has_person_person1_idx` (`person_id_1` ASC),
  INDEX `fk_person_has_person_loyalty1_idx` (`loyalty_id` ASC),
  INDEX `fk_person_has_person_milestone1_idx` (`milestone_id` ASC),
  CONSTRAINT `fk_person_has_person_person1`
    FOREIGN KEY (`person_id_1`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_person_person2`
    FOREIGN KEY (`person_id_2`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_person_loyalty1`
    FOREIGN KEY (`loyalty_id`)
    REFERENCES `spelwerk`.`loyalty` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_person_milestone1`
    FOREIGN KEY (`milestone_id`)
    REFERENCES `spelwerk`.`milestone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`nationality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`nationality` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`nationality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nationality` VARCHAR(128) NOT NULL,
  `iso` VARCHAR(3) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(256) NOT NULL,
  `password` VARCHAR(256) NOT NULL,
  `displayname` VARCHAR(128) NOT NULL,
  `admin` TINYINT(1) NOT NULL DEFAULT 0,
  `firstname` VARCHAR(128) NULL,
  `surname` VARCHAR(128) NULL,
  `twofactor` TINYINT(1) NOT NULL DEFAULT 0,
  `verify` TINYINT(1) NOT NULL DEFAULT 0,
  `verify_secret` VARCHAR(128) NULL,
  `verify_timeout` INT NULL,
  `login_secret` VARCHAR(128) NULL,
  `login_timeout` INT NULL,
  `reset_secret` VARCHAR(128) NULL,
  `reset_timeout` INT NULL,
  `nationality_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `username_UNIQUE` (`displayname` ASC),
  INDEX `fk_user_nationality1_idx` (`nationality_id` ASC),
  CONSTRAINT `fk_user_nationality1`
    FOREIGN KEY (`nationality_id`)
    REFERENCES `spelwerk`.`nationality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_story`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_story` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_story` (
  `user_id` INT NOT NULL,
  `story_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  `secret` VARCHAR(32) NULL,
  PRIMARY KEY (`user_id`, `story_id`),
  INDEX `fk_user_has_story_story1_idx` (`story_id` ASC),
  INDEX `fk_user_has_story_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_story_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_story_story1`
    FOREIGN KEY (`story_id`)
    REFERENCES `spelwerk`.`story` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_person` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_person` (
  `user_id` INT NOT NULL,
  `person_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  `favorite` TINYINT(1) NOT NULL DEFAULT 0,
  `secret` VARCHAR(32) NULL,
  PRIMARY KEY (`user_id`, `person_id`),
  INDEX `fk_user_has_person_person1_idx` (`person_id` ASC),
  INDEX `fk_user_has_person_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_person_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_person_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`articletype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`articletype` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`articletype` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` TEXT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`article` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`article` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(64) NOT NULL,
  `abstract` VARCHAR(128) NULL,
  `content` TEXT NOT NULL,
  `published` TINYINT(1) NOT NULL,
  `articletype_id` INT NOT NULL,
  `user_id` INT NOT NULL COMMENT 'Created By',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_page_pagetype1_idx` (`articletype_id` ASC),
  INDEX `fk_page_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_page_pagetype1`
    FOREIGN KEY (`articletype_id`)
    REFERENCES `spelwerk`.`articletype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_page_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`promotional`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`promotional` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`promotional` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Created By',
  `title` VARCHAR(64) NOT NULL,
  `content` TEXT NULL,
  `start` DATETIME NULL,
  `end` DATETIME NULL,
  `user_id` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_promotional_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_promotional_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`story_has_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`story_has_person` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`story_has_person` (
  `story_id` INT NOT NULL,
  `person_id` INT NOT NULL,
  `person_hash` VARCHAR(32) NULL,
  PRIMARY KEY (`story_id`, `person_id`),
  INDEX `fk_story_has_person_person1_idx` (`person_id` ASC),
  INDEX `fk_story_has_person_story1_idx` (`story_id` ASC),
  CONSTRAINT `fk_story_has_person_story1`
    FOREIGN KEY (`story_id`)
    REFERENCES `spelwerk`.`story` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_story_has_person_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`comment` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` TEXT NOT NULL,
  `user_id` INT NOT NULL COMMENT 'Written By',
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`article_has_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`article_has_comment` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`article_has_comment` (
  `article_id` INT NOT NULL,
  `comment_id` INT NOT NULL,
  PRIMARY KEY (`article_id`, `comment_id`),
  INDEX `fk_article_has_comment_comment1_idx` (`comment_id` ASC),
  INDEX `fk_article_has_comment_article1_idx` (`article_id` ASC),
  CONSTRAINT `fk_article_has_comment_article1`
    FOREIGN KEY (`article_id`)
    REFERENCES `spelwerk`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_article_has_comment_comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `spelwerk`.`comment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_species`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_species` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_species` (
  `world_id` INT NOT NULL,
  `species_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `species_id`),
  INDEX `fk_world_has_species_species1_idx` (`species_id` ASC),
  INDEX `fk_world_has_species_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_species_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_species_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_manifestation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_manifestation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_manifestation` (
  `world_id` INT NOT NULL,
  `manifestation_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `manifestation_id`),
  INDEX `fk_world_has_manifestation_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_world_has_manifestation_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_manifestation_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_manifestation_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_attribute` (
  `world_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`world_id`, `attribute_id`),
  INDEX `fk_world_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_world_has_attribute_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_attribute_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_expertise` (
  `world_id` INT NOT NULL,
  `expertise_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `expertise_id`),
  INDEX `fk_world_has_expertise_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_world_has_expertise_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_expertise_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_expertise_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_milestone` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_milestone` (
  `world_id` INT NOT NULL,
  `milestone_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `milestone_id`),
  INDEX `fk_world_has_milestone_milestone1_idx` (`milestone_id` ASC),
  INDEX `fk_world_has_milestone_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_milestone_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_milestone_milestone1`
    FOREIGN KEY (`milestone_id`)
    REFERENCES `spelwerk`.`milestone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_asset` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_asset` (
  `world_id` INT NOT NULL,
  `asset_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `asset_id`),
  INDEX `fk_world_has_asset_asset1_idx` (`asset_id` ASC),
  INDEX `fk_world_has_asset_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_asset_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_asset_asset1`
    FOREIGN KEY (`asset_id`)
    REFERENCES `spelwerk`.`asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_bionic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_bionic` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_bionic` (
  `world_id` INT NOT NULL,
  `bionic_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `bionic_id`),
  INDEX `fk_world_has_bionic_bionic1_idx` (`bionic_id` ASC),
  INDEX `fk_world_has_bionic_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_bionic_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_bionic_bionic1`
    FOREIGN KEY (`bionic_id`)
    REFERENCES `spelwerk`.`bionic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_protection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_protection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_protection` (
  `world_id` INT NOT NULL,
  `protection_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `protection_id`),
  INDEX `fk_world_has_protection_protection1_idx` (`protection_id` ASC),
  INDEX `fk_world_has_protection_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_protection_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_protection_protection1`
    FOREIGN KEY (`protection_id`)
    REFERENCES `spelwerk`.`protection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_software`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_software` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_software` (
  `world_id` INT NOT NULL,
  `software_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `software_id`),
  INDEX `fk_world_has_software_software1_idx` (`software_id` ASC),
  INDEX `fk_world_has_software_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_software_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_software_software1`
    FOREIGN KEY (`software_id`)
    REFERENCES `spelwerk`.`software` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_weapon` (
  `world_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `weapon_id`),
  INDEX `fk_world_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_world_has_weapon_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_weapon_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_weaponmod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_weaponmod` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_weaponmod` (
  `world_id` INT NOT NULL,
  `weaponmod_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `weaponmod_id`),
  INDEX `fk_world_has_weaponmod_weaponmod1_idx` (`weaponmod_id` ASC),
  INDEX `fk_world_has_weaponmod_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_weaponmod_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_weaponmod_weaponmod1`
    FOREIGN KEY (`weaponmod_id`)
    REFERENCES `spelwerk`.`weaponmod` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_world`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_world` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_world` (
  `user_id` INT NOT NULL,
  `world_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `world_id`),
  INDEX `fk_user_has_world_world1_idx` (`world_id` ASC),
  INDEX `fk_user_has_world_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_world_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_world_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`language` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` TEXT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idlanguage_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`firstnamegroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`firstnamegroup` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`firstnamegroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`surnamegroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`surnamegroup` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`surnamegroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`country` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`country` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` TEXT NULL,
  `language_id` INT NULL,
  `firstnamegroup_id` INT NULL,
  `surnamegroup_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_country_language1_idx` (`language_id` ASC),
  INDEX `fk_country_firstnamegroup1_idx` (`firstnamegroup_id` ASC),
  INDEX `fk_country_surnamegroup1_idx` (`surnamegroup_id` ASC),
  CONSTRAINT `fk_country_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `spelwerk`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_country_firstnamegroup1`
    FOREIGN KEY (`firstnamegroup_id`)
    REFERENCES `spelwerk`.`firstnamegroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_country_surnamegroup1`
    FOREIGN KEY (`surnamegroup_id`)
    REFERENCES `spelwerk`.`surnamegroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_country` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_country` (
  `world_id` INT NOT NULL,
  `country_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `country_id`),
  INDEX `fk_world_has_country_country1_idx` (`country_id` ASC),
  INDEX `fk_world_has_country_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_country_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_country_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `spelwerk`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_language` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_language` (
  `person_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  `native` TINYINT(1) NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`person_id`, `language_id`),
  INDEX `fk_person_has_language_language1_idx` (`language_id` ASC),
  INDEX `fk_person_has_language_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_language_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `spelwerk`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_language` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_language` (
  `world_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `language_id`),
  INDEX `fk_world_has_language_language1_idx` (`language_id` ASC),
  INDEX `fk_world_has_language_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_language_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `spelwerk`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`firstname`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`firstname` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`firstname` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`surname`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`surname` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`surname` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`firstnamegroup_has_firstname`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`firstnamegroup_has_firstname` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`firstnamegroup_has_firstname` (
  `firstnamegroup_id` INT NOT NULL,
  `firstname_id` INT NOT NULL,
  PRIMARY KEY (`firstnamegroup_id`, `firstname_id`),
  INDEX `fk_firstnamegroup_has_firstname_firstname1_idx` (`firstname_id` ASC),
  INDEX `fk_firstnamegroup_has_firstname_firstnamegroup1_idx` (`firstnamegroup_id` ASC),
  CONSTRAINT `fk_firstnamegroup_has_firstname_firstnamegroup1`
    FOREIGN KEY (`firstnamegroup_id`)
    REFERENCES `spelwerk`.`firstnamegroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_firstnamegroup_has_firstname_firstname1`
    FOREIGN KEY (`firstname_id`)
    REFERENCES `spelwerk`.`firstname` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`surnamegroup_has_surname`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`surnamegroup_has_surname` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`surnamegroup_has_surname` (
  `surnamegroup_id` INT NOT NULL,
  `surname_id` INT NOT NULL,
  PRIMARY KEY (`surnamegroup_id`, `surname_id`),
  INDEX `fk_surnamegroup_has_surname_surname1_idx` (`surname_id` ASC),
  INDEX `fk_surnamegroup_has_surname_surnamegroup1_idx` (`surnamegroup_id` ASC),
  CONSTRAINT `fk_surnamegroup_has_surname_surnamegroup1`
    FOREIGN KEY (`surnamegroup_id`)
    REFERENCES `spelwerk`.`surnamegroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_surnamegroup_has_surname_surname1`
    FOREIGN KEY (`surname_id`)
    REFERENCES `spelwerk`.`surname` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `template` TINYINT(1) NOT NULL,
  `popularity` INT NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `supernatural` TINYINT(1) NOT NULL,
  `occupation` VARCHAR(64) NULL,
  `description` TEXT NULL,
  `species_id` INT NOT NULL,
  `manifestation_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_npc_species1_idx` (`species_id` ASC),
  INDEX `fk_npc_manifestation1_idx` (`manifestation_id` ASC),
  CONSTRAINT `fk_npc_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_npc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_npc` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_npc` (
  `world_id` INT NOT NULL,
  `npc_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `npc_id`),
  INDEX `fk_world_has_npc_npc1_idx` (`npc_id` ASC),
  INDEX `fk_world_has_npc_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_npc_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_npc_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc_has_attribute` (
  `npc_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`npc_id`, `attribute_id`),
  INDEX `fk_npc_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_npc_has_attribute_npc1_idx` (`npc_id` ASC),
  CONSTRAINT `fk_npc_has_attribute_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc_has_expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc_has_expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc_has_expertise` (
  `npc_id` INT NOT NULL,
  `expertise_id` INT NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`npc_id`, `expertise_id`),
  INDEX `fk_npc_has_expertise_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_npc_has_expertise_npc1_idx` (`npc_id` ASC),
  CONSTRAINT `fk_npc_has_expertise_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_has_expertise_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc_has_weapon` (
  `npc_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  PRIMARY KEY (`npc_id`, `weapon_id`),
  INDEX `fk_npc_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_npc_has_weapon_npc1_idx` (`npc_id` ASC),
  CONSTRAINT `fk_npc_has_weapon_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc_has_protection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc_has_protection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc_has_protection` (
  `npc_id` INT NOT NULL,
  `protection_id` INT NOT NULL,
  PRIMARY KEY (`npc_id`, `protection_id`),
  INDEX `fk_npc_has_protection_protection1_idx` (`protection_id` ASC),
  INDEX `fk_npc_has_protection_npc1_idx` (`npc_id` ASC),
  CONSTRAINT `fk_npc_has_protection_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_has_protection_protection1`
    FOREIGN KEY (`protection_id`)
    REFERENCES `spelwerk`.`protection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`story_has_npc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`story_has_npc` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`story_has_npc` (
  `story_id` INT NOT NULL,
  `npc_id` INT NOT NULL,
  PRIMARY KEY (`story_id`, `npc_id`),
  INDEX `fk_story_has_npc_npc1_idx` (`npc_id` ASC),
  INDEX `fk_story_has_npc_story1_idx` (`story_id` ASC),
  CONSTRAINT `fk_story_has_npc_story1`
    FOREIGN KEY (`story_id`)
    REFERENCES `spelwerk`.`story` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_story_has_npc_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_unarmed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_unarmed` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_unarmed` (
  `person_id` INT NOT NULL,
  `unarmed_id` INT NOT NULL,
  PRIMARY KEY (`person_id`, `unarmed_id`),
  INDEX `fk_person_has_unarmed_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_unarmed_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `template` TINYINT(1) NOT NULL DEFAULT 0,
  `popularity` INT NOT NULL DEFAULT 0,
  `thumbsup` INT NOT NULL DEFAULT 0,
  `thumbsdown` INT NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `species_id` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_companion_species1_idx` (`species_id` ASC),
  CONSTRAINT `fk_companion_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_companion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_companion` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_companion` (
  `person_id` INT NOT NULL,
  `companion_id` INT NOT NULL,
  `nickname` VARCHAR(64) NOT NULL,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `companion_id`),
  INDEX `fk_person_has_companion_companion1_idx` (`companion_id` ASC),
  INDEX `fk_person_has_companion_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_companion_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_companion_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion_has_attribute` (
  `companion_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`companion_id`, `attribute_id`),
  INDEX `fk_companion_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_companion_has_attribute_companion1_idx` (`companion_id` ASC),
  CONSTRAINT `fk_companion_has_attribute_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_companion_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion_has_expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion_has_expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion_has_expertise` (
  `companion_id` INT NOT NULL,
  `expertise_id` INT NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`companion_id`, `expertise_id`),
  INDEX `fk_companion_has_expertise_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_companion_has_expertise_companion1_idx` (`companion_id` ASC),
  CONSTRAINT `fk_companion_has_expertise_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_companion_has_expertise_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion_has_unarmed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion_has_unarmed` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion_has_unarmed` (
  `companion_id` INT NOT NULL,
  `unarmed_id` INT NOT NULL,
  PRIMARY KEY (`companion_id`, `unarmed_id`),
  INDEX `fk_companion_has_unarmed_companion1_idx` (`companion_id` ASC),
  CONSTRAINT `fk_companion_has_unarmed_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_companion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_companion` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_companion` (
  `world_id` INT NOT NULL,
  `companion_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `companion_id`),
  INDEX `fk_world_has_companion_companion1_idx` (`companion_id` ASC),
  INDEX `fk_world_has_companion_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_companion_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_companion_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion_has_weapon` (
  `companion_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  PRIMARY KEY (`companion_id`, `weapon_id`),
  INDEX `fk_companion_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_companion_has_weapon_companion1_idx` (`companion_id` ASC),
  CONSTRAINT `fk_companion_has_weapon_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_companion_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`species_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`species_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`species_has_weapon` (
  `species_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  PRIMARY KEY (`species_id`, `weapon_id`),
  INDEX `fk_species_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_species_has_weapon_species1_idx` (`species_id` ASC),
  CONSTRAINT `fk_species_has_weapon_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_species_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`background_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`background_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`background_has_attribute` (
  `background_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`background_id`, `attribute_id`),
  INDEX `fk_background_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_background_has_attribute_background1_idx` (`background_id` ASC),
  CONSTRAINT `fk_background_has_attribute_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_background_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`background_has_asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`background_has_asset` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`background_has_asset` (
  `background_id` INT NOT NULL,
  `asset_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`background_id`, `asset_id`),
  INDEX `fk_background_has_asset_asset1_idx` (`asset_id` ASC),
  INDEX `fk_background_has_asset_background1_idx` (`background_id` ASC),
  CONSTRAINT `fk_background_has_asset_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_background_has_asset_asset1`
    FOREIGN KEY (`asset_id`)
    REFERENCES `spelwerk`.`asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_background`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_background` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_background` (
  `world_id` INT NOT NULL,
  `background_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `background_id`),
  INDEX `fk_world_has_background_background1_idx` (`background_id` ASC),
  INDEX `fk_world_has_background_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_background_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_background_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`sanity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`sanity` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`sanity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(256) NOT NULL,
  `popularity` INT NOT NULL DEFAULT 0,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`disease`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`disease` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`disease` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(256) NOT NULL,
  `popularity` INT NOT NULL DEFAULT 0,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_sanity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_sanity` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_sanity` (
  `person_id` INT NOT NULL,
  `sanity_id` INT NOT NULL,
  `heal` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '	',
  `timestwo` TINYINT(1) NOT NULL,
  PRIMARY KEY (`person_id`, `sanity_id`),
  INDEX `fk_person_has_sanity_sanity1_idx` (`sanity_id` ASC),
  INDEX `fk_person_has_sanity_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_sanity_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_sanity_sanity1`
    FOREIGN KEY (`sanity_id`)
    REFERENCES `spelwerk`.`sanity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_disease`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_disease` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_disease` (
  `person_id` INT NOT NULL,
  `disease_id` INT NOT NULL,
  `heal` TINYINT(1) NOT NULL DEFAULT 0,
  `timestwo` TINYINT(1) NOT NULL,
  PRIMARY KEY (`person_id`, `disease_id`),
  INDEX `fk_person_has_disease_disease1_idx` (`disease_id` ASC),
  INDEX `fk_person_has_disease_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_disease_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_disease_disease1`
    FOREIGN KEY (`disease_id`)
    REFERENCES `spelwerk`.`disease` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`meeting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`meeting` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`meeting` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `notes` TEXT NULL,
  `story_id` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_session_story1_idx` (`story_id` ASC),
  CONSTRAINT `fk_session_story1`
    FOREIGN KEY (`story_id`)
    REFERENCES `spelwerk`.`story` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`location` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `person_id` INT NULL,
  `location_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_location_person1_idx` (`person_id` ASC),
  INDEX `fk_location_location1_idx` (`location_id` ASC),
  CONSTRAINT `fk_location_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_location_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `spelwerk`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_friend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_friend` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_friend` (
  `user_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `friend_id`),
  INDEX `fk_user_has_user_user2_idx` (`friend_id` ASC),
  INDEX `fk_user_has_user_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user2`
    FOREIGN KEY (`friend_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_species`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_species` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_species` (
  `user_id` INT NOT NULL,
  `species_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `species_id`),
  INDEX `fk_user_has_species_species1_idx` (`species_id` ASC),
  INDEX `fk_user_has_species_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_species_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_species_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_background`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_background` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_background` (
  `user_id` INT NOT NULL,
  `background_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `background_id`),
  INDEX `fk_user_has_background_background1_idx` (`background_id` ASC),
  INDEX `fk_user_has_background_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_background_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_background_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_milestone` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_milestone` (
  `user_id` INT NOT NULL,
  `milestone_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `milestone_id`),
  INDEX `fk_user_has_milestone_milestone1_idx` (`milestone_id` ASC),
  INDEX `fk_user_has_milestone_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_milestone_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_milestone_milestone1`
    FOREIGN KEY (`milestone_id`)
    REFERENCES `spelwerk`.`milestone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_bionic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_bionic` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_bionic` (
  `user_id` INT NOT NULL,
  `bionic_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `bionic_id`),
  INDEX `fk_user_has_bionic_bionic1_idx` (`bionic_id` ASC),
  INDEX `fk_user_has_bionic_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_bionic_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_bionic_bionic1`
    FOREIGN KEY (`bionic_id`)
    REFERENCES `spelwerk`.`bionic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_augmentation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_augmentation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_augmentation` (
  `user_id` INT NOT NULL,
  `augmentation_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `augmentation_id`),
  INDEX `fk_user_has_augmentation_augmentation1_idx` (`augmentation_id` ASC),
  INDEX `fk_user_has_augmentation_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_augmentation_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_augmentation_augmentation1`
    FOREIGN KEY (`augmentation_id`)
    REFERENCES `spelwerk`.`augmentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_weapon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_weapon` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_weapon` (
  `user_id` INT NOT NULL,
  `weapon_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `weapon_id`),
  INDEX `fk_user_has_weapon_weapon1_idx` (`weapon_id` ASC),
  INDEX `fk_user_has_weapon_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_weapon_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_weapon_weapon1`
    FOREIGN KEY (`weapon_id`)
    REFERENCES `spelwerk`.`weapon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_asset` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_asset` (
  `user_id` INT NOT NULL,
  `asset_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `asset_id`),
  INDEX `fk_user_has_asset_asset1_idx` (`asset_id` ASC),
  INDEX `fk_user_has_asset_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_asset_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_asset_asset1`
    FOREIGN KEY (`asset_id`)
    REFERENCES `spelwerk`.`asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_npc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_npc` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_npc` (
  `user_id` INT NOT NULL,
  `npc_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `npc_id`),
  INDEX `fk_user_has_npc_npc1_idx` (`npc_id` ASC),
  INDEX `fk_user_has_npc_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_npc_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_npc_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_companion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_companion` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_companion` (
  `user_id` INT NOT NULL,
  `companion_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `companion_id`),
  INDEX `fk_user_has_companion_companion1_idx` (`companion_id` ASC),
  INDEX `fk_user_has_companion_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_companion_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_companion_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_attribute` (
  `user_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `attribute_id`),
  INDEX `fk_user_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_user_has_attribute_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_attribute_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_expertise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_expertise` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_expertise` (
  `user_id` INT NOT NULL,
  `expertise_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `expertise_id`),
  INDEX `fk_user_has_expertise_expertise1_idx` (`expertise_id` ASC),
  INDEX `fk_user_has_expertise_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_expertise_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_expertise_expertise1`
    FOREIGN KEY (`expertise_id`)
    REFERENCES `spelwerk`.`expertise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_focus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_focus` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_focus` (
  `user_id` INT NOT NULL,
  `focus_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `focus_id`),
  INDEX `fk_user_has_focus_focus1_idx` (`focus_id` ASC),
  INDEX `fk_user_has_focus_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_focus_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_focus_focus1`
    FOREIGN KEY (`focus_id`)
    REFERENCES `spelwerk`.`focus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_manifestation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_manifestation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_manifestation` (
  `user_id` INT NOT NULL,
  `manifestation_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `manifestation_id`),
  INDEX `fk_user_has_manifestation_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_user_has_manifestation_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_manifestation_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_manifestation_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_protection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_protection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_protection` (
  `user_id` INT NOT NULL,
  `protection_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `protection_id`),
  INDEX `fk_user_has_protection_protection1_idx` (`protection_id` ASC),
  INDEX `fk_user_has_protection_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_protection_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_protection_protection1`
    FOREIGN KEY (`protection_id`)
    REFERENCES `spelwerk`.`protection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_software`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_software` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_software` (
  `user_id` INT NOT NULL,
  `software_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `software_id`),
  INDEX `fk_user_has_software_software1_idx` (`software_id` ASC),
  INDEX `fk_user_has_software_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_software_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_software_software1`
    FOREIGN KEY (`software_id`)
    REFERENCES `spelwerk`.`software` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_weaponmod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_weaponmod` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_weaponmod` (
  `user_id` INT NOT NULL,
  `weaponmod_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `weaponmod_id`),
  INDEX `fk_user_has_weaponmod_weaponmod1_idx` (`weaponmod_id` ASC),
  INDEX `fk_user_has_weaponmod_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_weaponmod_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_weaponmod_weaponmod1`
    FOREIGN KEY (`weaponmod_id`)
    REFERENCES `spelwerk`.`weaponmod` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_playable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_playable` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_playable` (
  `person_id` INT NOT NULL,
  `cheated` TINYINT(1) NOT NULL DEFAULT 0,
  `supernatural` TINYINT(1) NOT NULL DEFAULT 0,
  `age` INT NOT NULL,
  `background_id` INT NULL,
  `nature_id` INT NULL,
  `identity_id` INT NULL,
  `country_id` INT NULL,
  `manifestation_id` INT NULL,
  `focus_id` INT NULL,
  INDEX `fk_playable_person1_idx` (`person_id` ASC),
  PRIMARY KEY (`person_id`),
  UNIQUE INDEX `person_id_UNIQUE` (`person_id` ASC),
  INDEX `fk_playable_background1_idx` (`background_id` ASC),
  INDEX `fk_playable_nature1_idx` (`nature_id` ASC),
  INDEX `fk_playable_identity1_idx` (`identity_id` ASC),
  INDEX `fk_playable_country1_idx` (`country_id` ASC),
  INDEX `fk_playable_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_playable_focus1_idx` (`focus_id` ASC),
  CONSTRAINT `fk_playable_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_nature1`
    FOREIGN KEY (`nature_id`)
    REFERENCES `spelwerk`.`nature` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_identity1`
    FOREIGN KEY (`identity_id`)
    REFERENCES `spelwerk`.`identity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `spelwerk`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playable_focus1`
    FOREIGN KEY (`focus_id`)
    REFERENCES `spelwerk`.`focus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_creation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_creation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_creation` (
  `person_id` INT NOT NULL,
  `point_expertise` INT NOT NULL,
  `point_gift` INT NOT NULL,
  `point_imperfection` INT NOT NULL,
  `point_milestone` INT NOT NULL,
  `point_money` INT NOT NULL,
  `point_power` INT NOT NULL,
  `point_relationship` INT NOT NULL,
  `point_skill` INT NOT NULL,
  `point_supernatural` INT NOT NULL,
  INDEX `fk_creation_person1_idx` (`person_id` ASC),
  PRIMARY KEY (`person_id`),
  UNIQUE INDEX `person_id_UNIQUE` (`person_id` ASC),
  CONSTRAINT `fk_creation_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`augmentation_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`augmentation_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`augmentation_has_attribute` (
  `augmentation_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`augmentation_id`, `attribute_id`),
  INDEX `fk_augmentation_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_augmentation_has_attribute_augmentation1_idx` (`augmentation_id` ASC),
  CONSTRAINT `fk_augmentation_has_attribute_augmentation1`
    FOREIGN KEY (`augmentation_id`)
    REFERENCES `spelwerk`.`augmentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_augmentation_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`bionic_has_augmentation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`bionic_has_augmentation` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`bionic_has_augmentation` (
  `bionic_id` INT NOT NULL,
  `augmentation_id` INT NOT NULL,
  PRIMARY KEY (`bionic_id`, `augmentation_id`),
  INDEX `fk_bionic_has_augmentation_augmentation1_idx` (`augmentation_id` ASC),
  INDEX `fk_bionic_has_augmentation_bionic1_idx` (`bionic_id` ASC),
  CONSTRAINT `fk_bionic_has_augmentation_bionic1`
    FOREIGN KEY (`bionic_id`)
    REFERENCES `spelwerk`.`bionic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bionic_has_augmentation_augmentation1`
    FOREIGN KEY (`augmentation_id`)
    REFERENCES `spelwerk`.`augmentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`drive`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`drive` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`drive` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`pride`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`pride` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`pride` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`problem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`problem` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`problem` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_location` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_location` (
  `world_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `location_id`),
  INDEX `fk_world_has_location_location1_idx` (`location_id` ASC),
  INDEX `fk_world_has_location_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_location_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_location_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `spelwerk`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`story_has_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`story_has_location` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`story_has_location` (
  `story_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`story_id`, `location_id`),
  INDEX `fk_story_has_location_location1_idx` (`location_id` ASC),
  INDEX `fk_story_has_location_story1_idx` (`story_id` ASC),
  CONSTRAINT `fk_story_has_location_story1`
    FOREIGN KEY (`story_id`)
    REFERENCES `spelwerk`.`story` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_story_has_location_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `spelwerk`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_location` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_location` (
  `user_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL,
  PRIMARY KEY (`user_id`, `location_id`),
  INDEX `fk_user_has_location_location1_idx` (`location_id` ASC),
  INDEX `fk_user_has_location_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_location_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_location_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `spelwerk`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`gift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`gift` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`gift` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `species_id` INT NULL,
  `manifestation_id` INT NULL,
  `attribute_id` INT NULL,
  `attribute_value` INT NULL,
  `skill_id` INT NULL,
  `skill_value` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_pride_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_pride_species1_idx` (`species_id` ASC),
  INDEX `fk_pride_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_gift_skill1_idx` (`skill_id` ASC),
  CONSTRAINT `fk_pride_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pride_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pride_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gift_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`imperfection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`imperfection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`imperfection` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `canon` TINYINT(1) NOT NULL DEFAULT 0,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `species_id` INT NULL,
  `manifestation_id` INT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_imperfection_manifestation1_idx` (`manifestation_id` ASC),
  INDEX `fk_imperfection_species1_idx` (`species_id` ASC),
  CONSTRAINT `fk_imperfection_manifestation1`
    FOREIGN KEY (`manifestation_id`)
    REFERENCES `spelwerk`.`manifestation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imperfection_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_species`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_species` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_species` (
  `person_id` INT NOT NULL,
  `species_id` INT NOT NULL,
  `first` TINYINT(1) NOT NULL DEFAULT 0,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `species_id`),
  INDEX `fk_person_has_species_species1_idx` (`species_id` ASC),
  INDEX `fk_person_has_species_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_species_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_species_species1`
    FOREIGN KEY (`species_id`)
    REFERENCES `spelwerk`.`species` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_gift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_gift` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_gift` (
  `person_id` INT NOT NULL,
  `gift_id` INT NOT NULL,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `gift_id`),
  INDEX `fk_person_has_gift_gift1_idx` (`gift_id` ASC),
  INDEX `fk_person_has_gift_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_gift_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_gift_gift1`
    FOREIGN KEY (`gift_id`)
    REFERENCES `spelwerk`.`gift` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_imperfection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_imperfection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_imperfection` (
  `person_id` INT NOT NULL,
  `imperfection_id` INT NOT NULL,
  `custom` TEXT NULL,
  PRIMARY KEY (`person_id`, `imperfection_id`),
  INDEX `fk_person_has_imperfection_imperfection1_idx` (`imperfection_id` ASC),
  INDEX `fk_person_has_imperfection_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_imperfection_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_imperfection_imperfection1`
    FOREIGN KEY (`imperfection_id`)
    REFERENCES `spelwerk`.`imperfection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`guild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`guild` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`guild` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `description` TEXT NULL,
  `banner_path` VARCHAR(256) NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`guild_has_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`guild_has_user` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`guild_has_user` (
  `guild_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL,
  PRIMARY KEY (`guild_id`, `user_id`),
  INDEX `fk_guild_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_guild_has_user_guild1_idx` (`guild_id` ASC),
  CONSTRAINT `fk_guild_has_user_guild1`
    FOREIGN KEY (`guild_id`)
    REFERENCES `spelwerk`.`guild` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_guild_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`guild_has_request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`guild_has_request` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`guild_has_request` (
  `guild_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `comment` TEXT NULL,
  PRIMARY KEY (`guild_id`, `user_id`),
  INDEX `fk_guild_has_user1_user1_idx` (`user_id` ASC),
  INDEX `fk_guild_has_user1_guild1_idx` (`guild_id` ASC),
  CONSTRAINT `fk_guild_has_user1_guild1`
    FOREIGN KEY (`guild_id`)
    REFERENCES `spelwerk`.`guild` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_guild_has_user1_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_description`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_description` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_description` (
  `person_id` INT NOT NULL,
  `firstname` VARCHAR(128) NULL,
  `surname` VARCHAR(128) NULL,
  `gender` VARCHAR(64) NULL,
  `description` TEXT NULL,
  `personality` TEXT NULL,
  `appearance` TEXT NULL,
  `background` TEXT NULL,
  `drive` TEXT NULL,
  `pride` TEXT NULL,
  `problem` TEXT NULL,
  `shame` TEXT NULL,
  `picture_path` VARCHAR(256) NULL,
  INDEX `fk_person_description_person1_idx` (`person_id` ASC),
  PRIMARY KEY (`person_id`),
  UNIQUE INDEX `id_UNIQUE` (`person_id` ASC),
  CONSTRAINT `fk_person_description_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_gift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_gift` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_gift` (
  `world_id` INT NOT NULL,
  `gift_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `gift_id`),
  INDEX `fk_world_has_gift_gift1_idx` (`gift_id` ASC),
  INDEX `fk_world_has_gift_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_gift_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_gift_gift1`
    FOREIGN KEY (`gift_id`)
    REFERENCES `spelwerk`.`gift` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_imperfection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_imperfection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_imperfection` (
  `world_id` INT NOT NULL,
  `imperfection_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `imperfection_id`),
  INDEX `fk_world_has_imperfection_imperfection1_idx` (`imperfection_id` ASC),
  INDEX `fk_world_has_imperfection_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_imperfection_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_imperfection_imperfection1`
    FOREIGN KEY (`imperfection_id`)
    REFERENCES `spelwerk`.`imperfection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_gift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_gift` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_gift` (
  `user_id` INT NOT NULL,
  `gift_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `gift_id`),
  INDEX `fk_user_has_gift_gift1_idx` (`gift_id` ASC),
  INDEX `fk_user_has_gift_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_gift_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_gift_gift1`
    FOREIGN KEY (`gift_id`)
    REFERENCES `spelwerk`.`gift` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_imperfection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_imperfection` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_imperfection` (
  `user_id` INT NOT NULL,
  `imperfection_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `imperfection_id`),
  INDEX `fk_user_has_imperfection_imperfection1_idx` (`imperfection_id` ASC),
  INDEX `fk_user_has_imperfection_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_imperfection_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_imperfection_imperfection1`
    FOREIGN KEY (`imperfection_id`)
    REFERENCES `spelwerk`.`imperfection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_skill` (
  `person_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`person_id`, `skill_id`),
  INDEX `fk_person_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_person_has_skill_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_skill_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`person_has_doctrine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`person_has_doctrine` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`person_has_doctrine` (
  `person_id` INT NOT NULL,
  `doctrine_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`person_id`, `doctrine_id`),
  INDEX `fk_person_has_doctrine_doctrine1_idx` (`doctrine_id` ASC),
  INDEX `fk_person_has_doctrine_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_has_doctrine_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `spelwerk`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_doctrine_doctrine1`
    FOREIGN KEY (`doctrine_id`)
    REFERENCES `spelwerk`.`doctrine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`world_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`world_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`world_has_skill` (
  `world_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  PRIMARY KEY (`world_id`, `skill_id`),
  INDEX `fk_world_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_world_has_skill_world1_idx` (`world_id` ASC),
  CONSTRAINT `fk_world_has_skill_world1`
    FOREIGN KEY (`world_id`)
    REFERENCES `spelwerk`.`world` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_world_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_skill` (
  `user_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL,
  PRIMARY KEY (`user_id`, `skill_id`),
  INDEX `fk_user_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_user_has_skill_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_skill_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`background_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`background_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`background_has_skill` (
  `background_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`background_id`, `skill_id`),
  INDEX `fk_background_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_background_has_skill_background1_idx` (`background_id` ASC),
  CONSTRAINT `fk_background_has_skill_background1`
    FOREIGN KEY (`background_id`)
    REFERENCES `spelwerk`.`background` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_background_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`protection_has_attribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`protection_has_attribute` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`protection_has_attribute` (
  `protection_id` INT NOT NULL,
  `attribute_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`protection_id`, `attribute_id`),
  INDEX `fk_protection_has_attribute_attribute1_idx` (`attribute_id` ASC),
  INDEX `fk_protection_has_attribute_protection1_idx` (`protection_id` ASC),
  CONSTRAINT `fk_protection_has_attribute_protection1`
    FOREIGN KEY (`protection_id`)
    REFERENCES `spelwerk`.`protection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_protection_has_attribute_attribute1`
    FOREIGN KEY (`attribute_id`)
    REFERENCES `spelwerk`.`attribute` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`companion_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`companion_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`companion_has_skill` (
  `companion_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`companion_id`, `skill_id`),
  INDEX `fk_companion_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_companion_has_skill_companion1_idx` (`companion_id` ASC),
  CONSTRAINT `fk_companion_has_skill_companion1`
    FOREIGN KEY (`companion_id`)
    REFERENCES `spelwerk`.`companion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_companion_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`npc_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`npc_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`npc_has_skill` (
  `npc_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`npc_id`, `skill_id`),
  INDEX `fk_npc_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_npc_has_skill_npc1_idx` (`npc_id` ASC),
  CONSTRAINT `fk_npc_has_skill_npc1`
    FOREIGN KEY (`npc_id`)
    REFERENCES `spelwerk`.`npc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npc_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_doctrine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_doctrine` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_doctrine` (
  `user_id` INT NOT NULL,
  `doctrine_id` INT NOT NULL,
  `owner` TINYINT(1) NOT NULL,
  PRIMARY KEY (`user_id`, `doctrine_id`),
  INDEX `fk_user_has_doctrine_doctrine1_idx` (`doctrine_id` ASC),
  INDEX `fk_user_has_doctrine_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_doctrine_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_doctrine_doctrine1`
    FOREIGN KEY (`doctrine_id`)
    REFERENCES `spelwerk`.`doctrine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`augmentation_has_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`augmentation_has_skill` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`augmentation_has_skill` (
  `augmentation_id` INT NOT NULL,
  `skill_id` INT NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`augmentation_id`, `skill_id`),
  INDEX `fk_augmentation_has_skill_skill1_idx` (`skill_id` ASC),
  INDEX `fk_augmentation_has_skill_augmentation1_idx` (`augmentation_id` ASC),
  CONSTRAINT `fk_augmentation_has_skill_augmentation1`
    FOREIGN KEY (`augmentation_id`)
    REFERENCES `spelwerk`.`augmentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_augmentation_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `spelwerk`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`permission` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `table` VARCHAR(128) NULL,
  `description` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spelwerk`.`user_has_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spelwerk`.`user_has_permission` ;

CREATE TABLE IF NOT EXISTS `spelwerk`.`user_has_permission` (
  `user_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `permission_id`),
  INDEX `fk_user_has_permission_permission1_idx` (`permission_id` ASC),
  INDEX `fk_user_has_permission_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_permission_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spelwerk`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `spelwerk`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
